user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
    worker_rlimit_nofile 65535;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format with additional fields
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time" '
                    'cs=$upstream_cache_status';

    access_log /var/log/nginx/access.log main buffer=16k flush=5s;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    keepalive_requests 10000;
    types_hash_max_size 2048;
    server_tokens off;
    client_max_body_size 100M;
    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;

    # Buffer sizes
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/x-font-ttf
        application/x-font-opentype
        application/vnd.ms-fontobject;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:20m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:20m rate=200r/s;
    limit_req_zone $binary_remote_addr zone=strict:5m rate=5r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    # Caching
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=500m inactive=1d use_temp_path=off;

    # Upstream with multiple API instances
    upstream api_backend {
        least_conn;
        server api:8000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 64;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    # HTTP redirect to HTTPS
    server {
        listen 80;
        server_name api.techforge.ai app.techforge.ai techforge.ai www.techforge.ai;
        
        # Allow Let's Encrypt challenges
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # Main HTTPS server
    server {
        listen 443 ssl http2;
        server_name api.techforge.ai app.techforge.ai;
        
        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/techforge.ai/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/techforge.ai/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/techforge.ai/chain.pem;
        
        # SSL settings
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        
        # Modern configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=63072000" always;
        
        # Security headers
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' wss: https:; font-src 'self'; object-src 'none'; media-src 'self'; frame-src 'none';" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), interest-cohort=()" always;
        
        # Connection limits
        limit_conn perip 50;
        limit_conn perserver 1000;

        # API endpoints with caching
        location /api/ {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Caching for GET requests
            proxy_cache api_cache;
            proxy_cache_valid 200 302 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            
            # Skip caching for non-GET methods
            proxy_cache_methods GET HEAD;
            proxy_no_cache $cookie_nocache $arg_nocache $arg_comment;
            proxy_no_cache $http_pragma $http_authorization;
            
            # Headers
            add_header X-Cache-Status $upstream_cache_status;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Rate limiting
            limit_req zone=api burst=200 nodelay;
        }

        # Authentication endpoints (no caching)
        location ~ ^/api/v1/(auth|login|logout|register|refresh) {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # No caching for auth endpoints
            proxy_no_cache 1;
            proxy_cache_bypass 1;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            
            # Stricter rate limiting
            limit_req zone=auth burst=20 nodelay;
            
            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Admin endpoints (restricted access)
        location ~ ^/api/v1/admin/ {
            # Allow only specific IPs
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            proxy_pass http://api_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Very strict rate limiting
            limit_req zone=strict burst=5 nodelay;
        }

        # WebSocket for real-time updates
        location /ws/ {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
            
            # Connection limits for WebSocket
            limit_conn perip 10;
        }

        # Health check endpoint (internal only)
        location /health {
            access_log off;
            proxy_pass http://api_backend;
            proxy_set_header Host $host;
            
            # Allow health checks from monitoring systems
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # Metrics endpoint (Prometheus)
        location /metrics {
            access_log off;
            proxy_pass http://api_backend;
            proxy_set_header Host $host;
            
            # Restrict to monitoring systems
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # Static files with long cache
        location /static/ {
            root /var/www;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
            
            # Compression for static files
            gzip_static on;
            
            # Security headers
            add_header X-Content-Type-Options "nosniff" always;
        }

        # Favicon
        location /favicon.ico {
            root /var/www;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
            log_not_found off;
        }

        # Robots.txt
        location /robots.txt {
            root /var/www;
            expires 1d;
            add_header Cache-Control "public";
            access_log off;
        }

        # Documentation
        location /docs {
            proxy_pass http://api_backend/api/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache documentation pages
            proxy_cache static_cache;
            proxy_cache_valid 200 1h;
            
            # Basic rate limiting
            limit_req zone=general burst=50 nodelay;
        }

        # API documentation assets
        location ~ ^/(redoc|openapi\.json) {
            proxy_pass http://api_backend;
            proxy_set_header Host $host;
            
            # Cache API docs
            proxy_cache static_cache;
            proxy_cache_valid 200 30m;
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Security: Deny access to sensitive files
        location ~ /\.(git|env|htaccess|htpasswd) {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ \.(sql|log|conf|bak|backup)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Block common attack patterns
        location ~* (wp-admin|wp-login|xmlrpc|phpmyadmin) {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Default location
        location / {
            proxy_pass http://api_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # General rate limiting
            limit_req zone=general burst=100 nodelay;
        }

        # Custom error pages
        error_page 400 401 403 404 /error.html;
        error_page 500 502 503 504 /error.html;
        
        location = /error.html {
            root /usr/share/nginx/html;
            internal;
        }
    }

    # Monitoring server (internal)
    server {
        listen 8080;
        server_name monitoring.internal;
        
        # Basic auth for monitoring
        auth_basic "Monitoring";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        location /metrics {
            proxy_pass http://api_backend/metrics;
        }
    }
}